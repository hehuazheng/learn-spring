<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="quartzDataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${quartz.db.url}" />
        <property name="username" value="${quartz.db.username}" />
        <property name="password" value="${quartz.db.password}" />
    </bean>
    <bean name="testJob"
        class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.hzz.task.TestTask" />
        <property name="durability" value="true" />
    </bean>
    <bean id="testTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="testJob" />
        </property>
        <property name="cronExpression">
            <value>${quartz.task.testTrigger.cronExpression}</value>
        </property>
        <property name="misfireInstruction" value="2"></property>
    </bean>
    <bean id="schedulerFactoryBean"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
        destroy-method="destroy">
        <property name="jobFactory">
            <bean class="com.hzz.quartz.AutowiringSpringBeanJobFactory" />
        </property>
        <property name="triggers">
            <list>
                <ref bean="testTrigger" />
            </list>
        </property>
        <property name="dataSource" ref="quartzDataSource" />
<!--         <property name="transactionManager" ref="transactionManager" /> -->
        <property name="configLocation" value="classpath:quartz.properties" />
        <property name="applicationContextSchedulerContextKey"
            value="applicationContext" />
        <property name="overwriteExistingJobs" value="true" />
    </bean>
</beans>