<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<context:annotation-config />
	<context:component-scan base-package="study"></context:component-scan>
	
	<bean
        class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean
                    class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8" />
                </bean>
                <bean
                    class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    
	<bean id="readDataSource1" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://qserver1:3306/study?characterEncoding=UTF8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean id="readDataSource2" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://qserver1:3306/studyread?characterEncoding=UTF8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<bean id="writeDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://qserver1:3306/study?characterEncoding=UTF8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
    <!-- 读写分离数据源 -->
    <bean id="dataSource"
        class="com.pj.common.db.RoutingDataSource">
        <property name="writeDataSource" ref="writeDataSource" />
        <property name="readDataSourceMap">
            <map key-type="java.lang.String" value-type="javax.sql.DataSource">
                <entry key="read1" value-ref="readDataSource1" />
                <entry key="read2" value-ref="readDataSource2" />
            </map>
        </property>
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/spring/mybatis-config.xml"></property>
		<property name="mapperLocations">
			<list>
				<value>classpath:study/**/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="study.dao"></property>
	</bean>
	
	<bean id="routingAop" class="com.pj.common.db.aop.RoutingAop" />
    <aop:config>
        <aop:aspect ref="routingAop">
            <aop:around method="aroundRead" arg-names="read"
                pointcut="@annotation(read) " />
        </aop:aspect>
        <aop:aspect ref="routingAop">
            <aop:around method="aroundWrite" arg-names="write"
                pointcut="@annotation(write)" />
        </aop:aspect>
    </aop:config>
</beans>
